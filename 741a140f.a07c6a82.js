(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{160:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return p}));var a=t(0),s=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var b=s.a.createContext({}),c=function(e){var n=s.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return s.a.createElement(b.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},m=s.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,p=u["".concat(r,".").concat(m)]||u[m]||d[m]||i;return t?s.a.createElement(p,o(o({ref:n},b),{},{components:t})):s.a.createElement(p,o({ref:n},b))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var b=2;b<i;b++)r[b]=t[b];return s.a.createElement.apply(null,r)}return s.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},97:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return c}));var a=t(2),s=t(6),i=(t(0),t(160)),r={id:"ansible-overview",title:"Ansible Overview"},o={unversionedId:"dev/ansible/ansible-overview",id:"dev/ansible/ansible-overview",isDocsHomePage:!1,title:"Ansible Overview",description:"Playbooks",source:"@site/docs/dev/ansible/ansible-overview.md",slug:"/dev/ansible/ansible-overview",permalink:"/tech-documentation/docs/dev/ansible/ansible-overview",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dev/ansible/ansible-overview.md",version:"current"},l=[{value:"Playbooks",id:"playbooks",children:[]},{value:"Variables",id:"variables",children:[]},{value:"Inventories",id:"inventories",children:[]},{value:"Modules",id:"modules",children:[]},{value:"Using Ansible",id:"using-ansible",children:[]},{value:"Check Mode",id:"check-mode",children:[]},{value:"Inventory",id:"inventory",children:[]},{value:"YAML",id:"yaml",children:[]}],b={rightToc:l};function c(e){var n=e.components,t=Object(s.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"playbooks"},"Playbooks"),Object(i.b)("p",null,"Plain text YAML files that describe the desired state of something.",Object(i.b)("br",{parentName:"p"}),"\n","Human and machine readable",Object(i.b)("br",{parentName:"p"}),"\n","Can be used to build entire application environments  "),Object(i.b)("h2",{id:"variables"},"Variables"),Object(i.b)("p",null,"Many different ways to source variables"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Playbooks  "),Object(i.b)("li",{parentName:"ul"},"Files  "),Object(i.b)("li",{parentName:"ul"},"Inventories (group vars and host vars)  "),Object(i.b)("li",{parentName:"ul"},"Command Line  "),Object(i.b)("li",{parentName:"ul"},"Discovered Variables (facts)  "),Object(i.b)("li",{parentName:"ul"},"Ansible Tower  ")),Object(i.b)("h2",{id:"inventories"},"Inventories"),Object(i.b)("p",null,"Static lines of servers",Object(i.b)("br",{parentName:"p"}),"\n","Ranges",Object(i.b)("br",{parentName:"p"}),"\n","Other custom things",Object(i.b)("br",{parentName:"p"}),"\n","Dynamic lists of servers: AWS, Azure, Google Cloud Platform, etc.",Object(i.b)("br",{parentName:"p"}),"\n","Ultimately, lists of things you want to automate across.  "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Playbooks contain plays"),Object(i.b)("li",{parentName:"ul"},"plays contain tasks"),Object(i.b)("li",{parentName:"ul"},"tasks call modules")),Object(i.b)("p",null,"Tasks run sequentially"),Object(i.b)("p",null,"Handlers are triggered by tasks, and are run once, at the end of plays.  "),Object(i.b)("h2",{id:"modules"},"Modules"),Object(i.b)("p",null,"There are over 450 Ansible provided modules that automate nearly every part of your environment."),Object(i.b)("p",null,"Standard Structure: "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"module: directive1=value directive2=value  ")),Object(i.b)("h2",{id:"using-ansible"},"Using Ansible"),Object(i.b)("p",null,"How to run:  "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Ad-hoc - Call directly from the command line. Ansible 'inventory' -m"),Object(i.b)("li",{parentName:"ul"},"Playbook - ansible-playbook"),Object(i.b)("li",{parentName:"ul"},"Automation Framework - ansible tower")),Object(i.b)("h2",{id:"check-mode"},"Check Mode"),Object(i.b)("p",null,"Dry run for ad-hoc commands and Playbooks"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Validate playbook runs before making state changes on target systems")),Object(i.b)("h2",{id:"inventory"},"Inventory"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Defaults to being saved in /etc/ansible/hosts  "),Object(i.b)("li",{parentName:"ul"},"Specify different inventory using <path option on the command line  "),Object(i.b)("li",{parentName:"ul"},"The preferred practice in Ansible is to not store variables in the main inventory file.")),Object(i.b)("h2",{id:"yaml"},"YAML"),Object(i.b)("p",null,"YAML Ain't Markup Language"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"YAML is a human friendly data serialization standard for all programming languages.  "),Object(i.b)("li",{parentName:"ul"},"Ansible uses YAML because it is easier for humans to read and write than other common data formats like XML or JSON. Further, there are libraries available in most programming languages for working with YAML."),Object(i.b)("li",{parentName:"ul"},"YAML files begin with ",Object(i.b)("inlineCode",{parentName:"li"},"---")," and end with ",Object(i.b)("inlineCode",{parentName:"li"},"...")),Object(i.b)("li",{parentName:"ul"},'All members of a list are lines beginning at the same indentation level starting with a "- " (a dash and a space)'),Object(i.b)("li",{parentName:"ul"},"A dictionary is represented in a simple key: value form (there must be a space after the colon)"),Object(i.b)("li",{parentName:"ul"},"More complex data structures are possible, such as lists of dictionaries, dictionaries whose values are lists, or a mix of both."),Object(i.b)("li",{parentName:"ul"},"Dictionaries and lists can also be represented in abbreviated form.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Example:  ")))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'\n---\nmartin: {name: Martin Dev, job: developer, skills: Elite}\nfruits: [\'Apple\',\'Orange\',\'Strawberry\',\'Mango\']\n\nAnsible does not use boolean values often, but they exist. Yes, no, true, or false may be used.\n\nInventories\n\nItems to automate \n\nhttps://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html\n\nYAML Syntax\n\nThis is important as YAML is used to write Ansible Playbooks\n\nhttps://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html#yaml-syntax\n\nAnsible Facts\n\nSetup Task - This task is run whenever a playbook is run and it gathers a whole host of facts about the remote machine(s)\u200a\u2014\u200aIP addresses, disks, OS version\u2026 etc. Ansible refers to these as \u201cfacts\u201d.\n\nAnsible Custom Facts\n\nhttps://medium.com/@jezhalford/ansible-custom-facts-1e1d1bf65db8\n\nCustom configuration of ansible facts. On any Ansible controlled host\u200a\u2014\u200athat is, the remote machine that is being controlled and not the machine on which the playbook is run\u200a\u2014\u200ayou just need to create a directory at /etc/ansible/facts.d. Inside this directory, you can place one or more *.fact files. These are files that return JSON data, which will then be included in the raft of facts that Ansible gathers at the start of each playbook run. You can name them anything you like, as long as they use the *.fact extension\n\nGather Facts\n\nFacts are described in the playbooks section and represent discovered variables about a system. These can be used to implement conditional execution of tasks but also just to get ad-hoc information about your system. You can see all facts via:\n\n$ ansible all -m setup\n\nIt\u2019s also possible to filter this output to just export certain facts\n\nFacts are information derived from speaking with your remote systems.\n\nAn example of this might be the IP address of the remote host, or what the operating system is.\n\nTo see what information is available, try the following:\n\nansible hostname -m setup\n\nThis will return a large amount of variable data\n\nAs discussed in the playbooks chapter, Ansible facts are a way of getting data about remote systems for use in playbook variables.\n\nUsually these are discovered automatically by the setup module in Ansible. Users can also write custom facts modules, as described in the API guide. However, what if you want to have a simple way to provide system or user provided data for use in Ansible variables, without writing a fact module?\n\n\u201cFacts.d\u201d is one mechanism for users to control some aspect of how their systems are managed.\n\nIf a remotely managed system has an /etc/ansible/facts.d directory, any files in this directory ending in .fact, can be JSON, INI, or executable files returning JSON, and these can supply local facts in Ansible. An alternate directory can be specified using the fact_path play keyword.\n\nFor example, assume /etc/ansible/facts.d/preferences.fact contains:\n\n[general]\n\n asdf=1\n\n bar=2\n\nThis will produce a hash variable fact named general with asdf and bar as members. To validate this, run the following:\n\nansible <hostname> -m setup -a "filter=ansible_local"\n\nAnd you will see the following fact added:\n\n"ansible_local": {\n\n"preferences": {\n\n"general": {\n\n"asdf" : "1",\n\n"bar": "2"\n\n}\n\n}\n\n}\n\nAnd this data can be accessed in a template/playbook as:\n\n{{ ansible_local.preferences.general.asdf }}\n\nThe local namespace prevents any user supplied fact from overriding system facts or variables defined elsewhere in the playbook.\n\nTo run a custom fact once the files are in place, you must specify the custom fact path (/home/vtguser/ansibleplaybooks/facts.d) :\n\nansible apsrt3596 -m setup -a "fact_path=\'/home/vtguser/ansibleplaybooks/facts.d\'" > /home/vtguser/ansibleplaybooks/customfacts/export/<whatever>.txt\n\nRun a playbook\n\nCustomFacts.yml --limit apsrt3596\n\nhttps://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#information-discovered-from-systems-facts\n\nansible xaas -i /home/vtguser/ansibleplaybooks/sandbox -m setup -a \'gather_subset=ohai\' --tree /home/vtguser/ansibleplaybooks/ohai/ohaidata/\n\nansible xaas -i /home/vtguser/ansibleplaybooks/sandbox -m setup -a \'gather_subset=ohai\' --tree /home/vtguser/ansibleplaybooks/\n\nset up task to\n\nwrite python script\n\n- skip in one level and go from there\n\nMaybe dump data to:\n\nrdb - relational databse\n\nResearch:\n\nansible filters\n\nansible tasks\n\njson should be good enough to compare outputs. Run with ansible and chef and diff outputs\n\n- figure out what info is relevant in chef and ansible \n\n:x\n\nwhich python\n\n#/bin/python +x\n\nhttps://linuxacademy.com/community/posts/show/topic/25690-gather-server-info-and-save-in-csv-file-with-ansbile\n\nhttps://github.com/fboender/ansible-cmdb\n\nhttps://github.com/fboender/ansible-cmdb/blob/master/src/ansible-cmdb.py\n\nPlural Sight\n')))}c.isMDXComponent=!0}}]);